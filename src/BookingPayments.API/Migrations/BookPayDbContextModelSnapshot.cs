// <auto-generated />
using System;
using BookingPayments.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingPayments.API.Migrations
{
    [DbContext(typeof(BookPayDbContext))]
    partial class BookPayDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BookingPayments.API.Entities.BookingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BookingStatusName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("BookingStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingStatusName = "Confirmed"
                        },
                        new
                        {
                            Id = 2,
                            BookingStatusName = "Pending"
                        },
                        new
                        {
                            Id = 3,
                            BookingStatusName = "Cancelled"
                        });
                });

            modelBuilder.Entity("BookingPayments.API.Entities.Bookings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingDate = new DateTime(2025, 3, 23, 14, 2, 47, 833, DateTimeKind.Local).AddTicks(7493),
                            CheckInDate = new DateTime(2025, 3, 24, 14, 2, 47, 833, DateTimeKind.Local).AddTicks(7498),
                            CheckOutDate = new DateTime(2025, 3, 25, 14, 2, 47, 833, DateTimeKind.Local).AddTicks(7503),
                            Price = 150,
                            ServiceId = 1,
                            StatusId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookingDate = new DateTime(2025, 3, 23, 14, 2, 47, 833, DateTimeKind.Local).AddTicks(7514),
                            CheckInDate = new DateTime(2025, 3, 26, 14, 2, 47, 833, DateTimeKind.Local).AddTicks(7517),
                            CheckOutDate = new DateTime(2025, 3, 27, 14, 2, 47, 833, DateTimeKind.Local).AddTicks(7519),
                            Price = 250,
                            ServiceId = 2,
                            StatusId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BookingPayments.API.Entities.Discounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<bool>("IsValid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountPercentage = 10,
                            IsValid = true,
                            ValidFrom = new DateTime(2025, 3, 23, 14, 2, 47, 833, DateTimeKind.Local).AddTicks(7129),
                            ValidTo = new DateTime(2025, 4, 23, 14, 2, 47, 833, DateTimeKind.Local).AddTicks(7206)
                        },
                        new
                        {
                            Id = 2,
                            DiscountPercentage = 20,
                            IsValid = true,
                            ValidFrom = new DateTime(2025, 3, 23, 14, 2, 47, 833, DateTimeKind.Local).AddTicks(7219),
                            ValidTo = new DateTime(2025, 4, 23, 14, 2, 47, 833, DateTimeKind.Local).AddTicks(7221)
                        });
                });

            modelBuilder.Entity("BookingPayments.API.Entities.RoomStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RoomStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Available"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Occupied"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Reserved"
                        },
                        new
                        {
                            Id = 4,
                            Status = "Maintenance"
                        });
                });

            modelBuilder.Entity("BookingPayments.API.Entities.Rooms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoomCapacity")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .HasColumnType("longtext");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoomCapacity = 20,
                            RoomName = "Room A",
                            StatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            RoomCapacity = 15,
                            RoomName = "Room B",
                            StatusId = 2
                        },
                        new
                        {
                            Id = 3,
                            RoomCapacity = 10,
                            RoomName = "Room C",
                            StatusId = 3
                        },
                        new
                        {
                            Id = 4,
                            RoomCapacity = 25,
                            RoomName = "Room D",
                            StatusId = 4
                        });
                });

            modelBuilder.Entity("BookingPayments.API.Entities.Services", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ServiceName")
                        .HasColumnType("longtext");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCancelled = false,
                            Price = 100,
                            ServiceName = "Service A",
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsCancelled = false,
                            Price = 200,
                            ServiceName = "Service B",
                            TrainerId = 2
                        });
                });

            modelBuilder.Entity("BookingPayments.API.Entities.Rooms", b =>
                {
                    b.HasOne("BookingPayments.API.Entities.RoomStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
