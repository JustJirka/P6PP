services:
  auth-service:
    build:
      context: .
      dockerfile: src/AuthService.API/Dockerfile
    container_name: auth-service
    ports:
      - "8005:8005"
    environment:
      - ConnectionStrings__DefaultConnection=Server=mysql;Port=3306;Database=auth_db;User=root;Password=password123;
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - backend

  user-service:
    build:
      context: .
      dockerfile: src/UserService.API/Dockerfile
    container_name: user-service
    ports:
      - "5189:5189"
    environment:
      - ConnectionStrings__DefaultConnection=Server=mysql;Port=3306;Database=user_db;User=root;Password=password123;
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - backend

  analytics-service:
    build:
      context: .
      dockerfile: src/AnalyticsService.API/Analytics/Dockerfile
    container_name: analytics-service
    ports:
      - "8006:8006"
    environment:
      - ConnectionStrings__DefaultConnection=Server=mysql;Port=3306;Database=analytics_db;User=root;Password=password123;
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - backend

  mysql:
    image: mysql:latest
    container_name: mysql_local
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=password123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-uroot",
          "-ppassword123",
        ]
      interval: 10s
      retries: 5
      timeout: 5s

volumes:
  mysql_data:

networks:
  backend:
    driver: bridge
